version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
#      SERVICE_TAGS: dev
#      # See https://docs.docker.com/docker-for-mac/networking/#i-want-to-connect-from-a-container-to-a-service-on-the-host
#      # See https://github.com/docker/for-linux/issues/264
#      # The `remote_host` below may optionally be replaced with `remote_connect_back`
#      XDEBUG_CONFIG: >-
#        remote_enable=1
#        remote_host=host.docker.internal
#        remote_connect_back=1
#        remote_port=9000
#        idekey=PHPSTORM
#      # This should correspond to the server declared in PHPStorm `Preferences | Languages & Frameworks | PHP | Servers`
#      # Then PHPStorm will use the corresponding path mappings
#      PHP_IDE_CONFIG: serverName=api-platform
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/

  #MySQL Service
  db:
    image: mysql:5.7
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf

#Volumes
volumes:
  dbdata:
    driver: local
